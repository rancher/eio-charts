# Specify the name of the application that is using this Upgrade Responder server
# This will be used to create a database named <application-name>_upgrade_responder
# in the InfluxDB to store all data for this Upgrade Responder
# The name must be in snake case format
applicationName: awesome_app

secret:
  name: upgrade-responder-secrets
  # Set this to true if you want to manage these secrets with helm
  managed: false
  influxDBUrl: ""
  influxDBUser: ""
  influxDBPassword: ""

# This configmap contains information about the latest release
# of the application that is using this Upgrade Responder
# Replace the information with the latest version of your application
configMap:
  responseConfig: |-
    {
       "Versions": [{
          "Name": "v1.0.0",
          "ReleaseDate": "2020-05-18T12:30:00Z",
          "Tags": ["latest"]
       }]
    }

replicaCount: 3

image:
  repository: longhornio/upgrade-responder
  tag: v0.1.1
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 8314

ingress:
  enabled: false
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
  path: /
  hosts:
    - example.com
  tls:
   - secretName: example-com-tls
     hosts:
       - example.com

resources:
  limits:
   cpu: 200m
   memory: 256Mi
  requests:
   cpu: 100m
   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
